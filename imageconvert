<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Converter Pro</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56d4;
            --secondary: #4895ef;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --white: #ffffff;
            --success: #4cc9f0;
            --error: #f72585;
            --radius: 12px;
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        @supports (font-variation-settings: normal) {
            * { font-family: 'Inter var', -apple-system, BlinkMacSystemFont, sans-serif; }
        }

        body {
            background-color: #f5f7ff;
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem 1.5rem;
        }

        header {
            text-align: center;
            margin-bottom: 2.5rem;
        }

        .logo {
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1rem;
        }

        .logo-icon {
            background: var(--primary);
            color: white;
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.3);
        }

        h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 0.5rem;
            line-height: 1.2;
        }

        .subtitle {
            color: var(--gray);
            font-size: 1.1rem;
            max-width: 600px;
            margin: 0 auto;
        }

        .card {
            background: var(--white);
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            padding: 2rem;
            margin-bottom: 2rem;
            transition: var(--transition);
        }

        .upload-area {
            border: 2px dashed var(--light-gray);
            border-radius: var(--radius);
            padding: 3rem 2rem;
            text-align: center;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .upload-area:hover {
            border-color: var(--primary);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(67, 97, 238, 0.15);
        }

        .upload-area.active {
            border-color: var(--primary);
            background-color: rgba(67, 97, 238, 0.03);
        }

        .upload-icon {
            font-size: 2.5rem;
            color: var(--primary);
            margin-bottom: 1.25rem;
        }

        .upload-text h2 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: var(--dark);
        }

        .upload-text p {
            color: var(--gray);
            margin-bottom: 1.5rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            background-color: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.75rem;
            border-radius: var(--radius);
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            transition: var(--transition);
            box-shadow: 0 4px 12px rgba(67, 97, 238, 0.2);
        }

        .btn:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(67, 97, 238, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-outline {
            background: transparent;
            color: var(--primary);
            border: 1px solid var(--primary);
            box-shadow: none;
        }

        .btn-outline:hover {
            background: rgba(67, 97, 238, 0.05);
        }

        .file-input {
            display: none;
        }

        .settings-panel {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
        }

        .setting-group {
            margin-bottom: 0;
        }

        .setting-group label {
            display: block;
            margin-bottom: 0.75rem;
            font-weight: 500;
            color: var(--dark);
            font-size: 0.95rem;
        }

        .select-wrapper {
            position: relative;
        }

        .select-wrapper::after {
            content: "âŒ„";
            position: absolute;
            top: 50%;
            right: 1rem;
            transform: translateY(-50%);
            pointer-events: none;
            color: var(--gray);
        }

        select {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 1px solid var(--light-gray);
            border-radius: var(--radius);
            font-size: 1rem;
            background-color: white;
            cursor: pointer;
            appearance: none;
            transition: var(--transition);
        }

        select:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

        .range-slider {
            width: 100%;
            margin-top: 0.5rem;
        }

        .slider-container {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        input[type="range"] {
            flex: 1;
            -webkit-appearance: none;
            height: 6px;
            border-radius: 3px;
            background: var(--light-gray);
            outline: none;
        }

        input[type="range"]::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: var(--primary);
            cursor: pointer;
            transition: var(--transition);
        }

        input[type="range"]::-webkit-slider-thumb:hover {
            transform: scale(1.1);
        }

        .slider-value {
            min-width: 40px;
            text-align: center;
            font-weight: 600;
            color: var(--primary);
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-top: 1.25rem;
        }

        input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: var(--primary);
            cursor: pointer;
        }

        .checkbox-group label {
            margin-bottom: 0;
            cursor: pointer;
            user-select: none;
        }

        .preview-section {
            display: none;
        }

        .preview-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .preview-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
        }

        .preview-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .preview-card {
            background: var(--white);
            border-radius: var(--radius);
            overflow: hidden;
            box-shadow: var(--shadow);
        }

        .preview-card-header {
            padding: 1rem 1.25rem;
            background: var(--light);
            border-bottom: 1px solid var(--light-gray);
            font-weight: 500;
        }

        .preview-card-body {
            padding: 1.25rem;
        }

        .preview-image {
            width: 100%;
            height: auto;
            max-height: 300px;
            object-fit: contain;
            border-radius: 8px;
            margin-bottom: 1rem;
            background: 
                linear-gradient(45deg, #f5f5f5 25%, transparent 25%),
                linear-gradient(-45deg, #f5f5f5 25%, transparent 25%),
                linear-gradient(45deg, transparent 75%, #f5f5f5 75%),
                linear-gradient(-45deg, transparent 75%, #f5f5f5 75%);
            background-size: 20px 20px;
            background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
        }

        .file-info {
            display: flex;
            justify-content: space-between;
            font-size: 0.875rem;
            color: var(--gray);
        }

        .file-info span {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .file-info i {
            font-size: 0.9em;
        }

        .download-btn {
            width: 100%;
            margin-top: 2rem;
            padding: 1rem;
            font-size: 1.1rem;
        }

        footer {
            text-align: center;
            margin-top: 3rem;
            padding-top: 2rem;
            color: var(--gray);
            font-size: 0.9rem;
            border-top: 1px solid var(--light-gray);
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.9);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            backdrop-filter: blur(4px);
        }

        .spinner {
            width: 60px;
            height: 60px;
            border: 4px solid rgba(67, 97, 238, 0.1);
            border-top: 4px solid var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1.5rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading-text {
            font-size: 1.1rem;
            color: var(--dark);
            font-weight: 500;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .container {
                padding: 1.5rem 1rem;
            }

            h1 {
                font-size: 1.75rem;
            }

            .subtitle {
                font-size: 1rem;
            }

            .card {
                padding: 1.5rem;
            }

            .upload-area {
                padding: 2rem 1.5rem;
            }

            .settings-panel {
                grid-template-columns: 1fr;
            }

            .preview-container {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 480px) {
            .logo {
                flex-direction: column;
                gap: 0.5rem;
            }

            .logo-icon {
                width: 40px;
                height: 40px;
                font-size: 1rem;
            }

            h1 {
                font-size: 1.5rem;
            }

            .upload-text h2 {
                font-size: 1.25rem;
            }

            .btn {
                padding: 0.65rem 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-exchange-alt"></i>
                </div>
                <h1>Image Converter Pro</h1>
            </div>
            <p class="subtitle">Convert images between JPG, PNG, and WEBP formats with ease</p>
        </header>

        <main>
            <div class="card">
                <div class="upload-area" id="dropArea">
                    <div class="upload-icon">
                        <i class="fas fa-cloud-upload-alt"></i>
                    </div>
                    <div class="upload-text">
                        <h2>Drag & Drop Your Image</h2>
                        <p>or click the button below to browse your files</p>
                    </div>
                    <button id="selectFileBtn" class="btn">
                        <i class="fas fa-folder-open"></i> Select Image
                    </button>
                    <input type="file" id="fileInput" class="file-input" accept="image/*">
                </div>
            </div>

            <div class="card">
                <div class="settings-panel">
                    <div class="setting-group">
                        <label for="outputFormat">Output Format</label>
                        <div class="select-wrapper">
                            <select id="outputFormat">
                                <option value="png">PNG (Portable Network Graphics)</option>
                                <option value="jpeg">JPEG (Joint Photographic Experts Group)</option>
                                <option value="webp">WEBP (Modern Web Format)</option>
                            </select>
                        </div>
                    </div>

                    <div class="setting-group" id="qualityContainer" style="display: none;">
                        <label for="quality">Quality Settings</label>
                        <div class="slider-container">
                            <input type="range" id="quality" class="range-slider" min="1" max="100" value="90">
                            <span id="qualityValue" class="slider-value">90%</span>
                        </div>
                    </div>

                    <div class="setting-group">
                        <div class="checkbox-group">
                            <input type="checkbox" id="preserveTransparency" checked>
                            <label for="preserveTransparency">Preserve Transparency</label>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card preview-section" id="previewSection">
                <div class="preview-header">
                    <h3 class="preview-title">Image Preview</h3>
                </div>
                
                <div class="preview-container">
                    <div class="preview-card">
                        <div class="preview-card-header">Original Image</div>
                        <div class="preview-card-body">
                            <img id="originalPreview" class="preview-image" src="#" alt="Original Image">
                            <div class="file-info">
                                <span><i class="fas fa-file"></i> <span id="originalFormat"></span></span>
                                <span><i class="fas fa-weight-hanging"></i> <span id="originalSize"></span></span>
                            </div>
                        </div>
                    </div>
                    
                    <div class="preview-card">
                        <div class="preview-card-header">Converted Image</div>
                        <div class="preview-card-body">
                            <img id="convertedPreview" class="preview-image" src="#" alt="Converted Image">
                            <div class="file-info">
                                <span><i class="fas fa-file"></i> <span id="convertedFormat"></span></span>
                                <span><i class="fas fa-weight-hanging"></i> <span id="convertedSize"></span></span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <button id="downloadBtn" class="btn download-btn">
                    <i class="fas fa-download"></i> Download Converted Image
                </button>
            </div>
        </main>

        <footer>
            <p>Image Converter Pro &copy; 2023 | All conversions happen in your browser</p>
        </footer>
    </div>

    <div class="loading-overlay" id="loadingOverlay" style="display: none;">
        <div class="spinner"></div>
        <p class="loading-text">Processing your image...</p>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const dropArea = document.getElementById('dropArea');
            const fileInput = document.getElementById('fileInput');
            const selectFileBtn = document.getElementById('selectFileBtn');
            const outputFormat = document.getElementById('outputFormat');
            const qualitySlider = document.getElementById('quality');
            const qualityValue = document.getElementById('qualityValue');
            const qualityContainer = document.getElementById('qualityContainer');
            const preserveTransparency = document.getElementById('preserveTransparency');
            const previewSection = document.getElementById('previewSection');
            const originalPreview = document.getElementById('originalPreview');
            const convertedPreview = document.getElementById('convertedPreview');
            const originalSize = document.getElementById('originalSize');
            const originalFormat = document.getElementById('originalFormat');
            const convertedSize = document.getElementById('convertedSize');
            const convertedFormat = document.getElementById('convertedFormat');
            const downloadBtn = document.getElementById('downloadBtn');
            const loadingOverlay = document.getElementById('loadingOverlay');

            // Variables
            let originalFile = null;
            let convertedBlob = null;

            // Event Listeners
            selectFileBtn.addEventListener('click', () => fileInput.click());
            fileInput.addEventListener('change', handleFileSelect);
            
            dropArea.addEventListener('dragover', (e) => {
                e.preventDefault();
                dropArea.classList.add('active');
            });
            
            dropArea.addEventListener('dragleave', () => {
                dropArea.classList.remove('active');
            });
            
            dropArea.addEventListener('drop', (e) => {
                e.preventDefault();
                dropArea.classList.remove('active');
                
                const file = e.dataTransfer.files[0];
                if (file && file.type.startsWith('image/')) {
                    processImageFile(file);
                }
            });

            outputFormat.addEventListener('change', updateQualityVisibility);
            qualitySlider.addEventListener('input', updateQualityValue);
            downloadBtn.addEventListener('click', downloadConvertedImage);
            preserveTransparency.addEventListener('change', convertImage);

            // Initialize
            updateQualityVisibility();

            // Functions
            function handleFileSelect(e) {
                const file = e.target.files[0];
                if (file && file.type.startsWith('image/')) {
                    processImageFile(file);
                }
            }

            function processImageFile(file) {
                originalFile = file;
                
                // Display original image info
                const reader = new FileReader();
                reader.onload = function(e) {
                    originalPreview.src = e.target.result;
                    
                    // Get file format
                    const format = file.name.split('.').pop().toLowerCase();
                    originalFormat.textContent = format.toUpperCase();
                    originalSize.textContent = formatFileSize(file.size);
                    
                    // Show preview section with animation
                    previewSection.style.display = 'block';
                    setTimeout(() => {
                        previewSection.style.opacity = '1';
                        previewSection.style.transform = 'translateY(0)';
                    }, 10);
                    
                    // Convert the image
                    convertImage();
                };
                reader.readAsDataURL(file);
            }

            function convertImage() {
                if (!originalFile) return;
                
                loadingOverlay.style.display = 'flex';
                
                // Use setTimeout to allow UI to update before heavy processing
                setTimeout(() => {
                    const selectedFormat = outputFormat.value;
                    const quality = parseInt(qualitySlider.value) / 100;
                    const preserveTransparencyValue = preserveTransparency.checked;
                    
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = new Image();
                        img.onload = function() {
                            // Create canvas
                            const canvas = document.createElement('canvas');
                            canvas.width = img.width;
                            canvas.height = img.height;
                            const ctx = canvas.getContext('2d');
                            
                            // Handle transparency
                            if (preserveTransparencyValue && (originalFile.type === 'image/png' || originalFile.name.endsWith('.png'))) {
                                // Fill with transparent background
                                ctx.clearRect(0, 0, canvas.width, canvas.height);
                            } else {
                                // Fill with white background (for formats that don't support transparency)
                                ctx.fillStyle = 'white';
                                ctx.fillRect(0, 0, canvas.width, canvas.height);
                            }
                            
                            // Draw the image
                            ctx.drawImage(img, 0, 0);
                            
                            // Convert to selected format
                            let mimeType;
                            switch (selectedFormat) {
                                case 'jpeg':
                                    mimeType = 'image/jpeg';
                                    break;
                                case 'png':
                                    mimeType = 'image/png';
                                    break;
                                case 'webp':
                                    mimeType = 'image/webp';
                                    break;
                                default:
                                    mimeType = 'image/png';
                            }
                            
                            // Convert canvas to blob
                            canvas.toBlob(function(blob) {
                                convertedBlob = blob;
                                
                                // Display converted image
                                const convertedUrl = URL.createObjectURL(blob);
                                convertedPreview.src = convertedUrl;
                                convertedFormat.textContent = selectedFormat.toUpperCase();
                                convertedSize.textContent = formatFileSize(blob.size);
                                
                                loadingOverlay.style.display = 'none';
                            }, mimeType, quality);
                        };
                        img.src = e.target.result;
                    };
                    reader.readAsDataURL(originalFile);
                }, 100);
            }

            function updateQualityVisibility() {
                const selectedFormat = outputFormat.value;
                // Show quality slider only for formats that support it (JPEG, WEBP)
                if (selectedFormat === 'jpeg' || selectedFormat === 'webp') {
                    qualityContainer.style.display = 'block';
                } else {
                    qualityContainer.style.display = 'none';
                }
                convertImage();
            }

            function updateQualityValue() {
                qualityValue.textContent = `${qualitySlider.value}%`;
                convertImage();
            }

            function downloadConvertedImage() {
                if (!convertedBlob) return;
                
                const a = document.createElement('a');
                const url = URL.createObjectURL(convertedBlob);
                const originalName = originalFile.name.split('.').slice(0, -1).join('.');
                const extension = outputFormat.value;
                
                a.href = url;
                a.download = `${originalName}_converted.${extension}`;
                document.body.appendChild(a);
                a.click();
                
                setTimeout(() => {
                    document.body.removeChild(a);
                    URL.revokeObjectURL(url);
                }, 100);
            }

            function formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }
        });
    </script>
</body>
</html>
